// Generated by https://quicktype.io
import type { MpaRating, Stat, Torrent, Cast, Meta } from "./utils";

export interface MovieDetailsResponse<WithImage = false, WithCast = false> {
  status: Stat;
  status_message: string;
  data: Data<WithImage, WithCast>;
  "@meta": Meta;
}

export interface Data<WithImage = false, WithCast = false> {
  movie: MovieDetails<WithImage, WithCast>;
}

type MovieDetails<WithImage = false, WithCast = false> = Movie &
  (WithImage extends true ? WithImageAddon : unknown) &
  (WithCast extends true ? WithCastAddon : unknown);

export interface Movie {
  id: number;
  url: string;
  imdb_code: string;
  title: string;
  title_english: string;
  title_long: string;
  slug: string;
  year: number;
  rating: number;
  runtime: number;
  genres: string[];
  download_count: number;
  like_count: number;
  description_intro: string;
  description_full: string;
  yt_trailer_code: string;
  language: string;
  mpa_rating: MpaRating;
  background_image: string;
  background_image_original: string;
  small_cover_image: string;
  medium_cover_image: string;
  large_cover_image: string;
  torrents: Torrent[];
  date_uploaded: string;
  date_uploaded_unix: number;
}

export interface WithImageAddon {
  medium_screenshot_image1: string;
  medium_screenshot_image2: string;
  medium_screenshot_image3: string;
  large_screenshot_image1: string;
  large_screenshot_image2: string;
  large_screenshot_image3: string;
}

export interface WithCastAddon {
  cast: Cast[];
}
